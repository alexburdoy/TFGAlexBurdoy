[{"C:\\Users\\Usuario\\React\\TFG\\tfg_alex\\src\\index.js":"1","C:\\Users\\Usuario\\React\\TFG\\tfg_alex\\src\\reportWebVitals.js":"2","C:\\Users\\Usuario\\React\\TFG\\tfg_alex\\src\\App.js":"3","C:\\Users\\Usuario\\React\\TFG\\tfg_alex\\src\\firebase-config.js":"4","C:\\Users\\Usuario\\React\\TFG\\tfg_alex\\src\\Auth.js":"5","C:\\Users\\Usuario\\React\\TFG\\tfg_alex\\src\\PrivateRoute.js":"6","C:\\Users\\Usuario\\React\\TFG\\tfg_alex\\src\\Login.js":"7","C:\\Users\\Usuario\\React\\TFG\\tfg_alex\\src\\SignUp.js":"8"},{"size":588,"mtime":1623265780721,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":22307,"mtime":1623267001635,"results":"12","hashOfConfig":"10"},{"size":431,"mtime":1622719132028,"results":"13","hashOfConfig":"10"},{"size":497,"mtime":1622720304088,"results":"14","hashOfConfig":"10"},{"size":585,"mtime":1622720855316,"results":"15","hashOfConfig":"10"},{"size":2602,"mtime":1622734414932,"results":"16","hashOfConfig":"10"},{"size":2275,"mtime":1624262921823,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"kxagph",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Usuario\\React\\TFG\\tfg_alex\\src\\index.js",[],["37","38"],"C:\\Users\\Usuario\\React\\TFG\\tfg_alex\\src\\reportWebVitals.js",[],"C:\\Users\\Usuario\\React\\TFG\\tfg_alex\\src\\App.js",["39","40","41","42","43","44","45"],"import logo from './logo.svg';\nimport './App.css';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport React, { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport firebaseAuth from './firebase-config';\nimport { AuthProvider } from './Auth.js';\nimport PrivateRoute from \"./PrivateRoute\";\nimport Login from \"./Login\";\nimport SignUp from \"./SignUp\";\n\n/*\n<form className=\"form-inline\" action={\"https://citmalumnes.upc.es/~alexbm1/TFG/data/cercaWorks.php\"} method={'GET'}>\n  <input class=\"form-control mr-sm-2 navbar-form borderRadius\" type=\"search\" aria-label=\"Search\" id=\"query\" name=\"query\" value={query} onChange={(e) => setQuery(e.target.value)} placeholder=\"Search\"></input>\n  <input class=\"btn btn-outline-info my-2 my-sm-0 navbar-form searchButton\" type=\"submit\" value=\"Search\"></input>\n</form>\n*/\nfunction App() {\n\n  const [query, setQuery] = useState('');\n\n\n\n  const searchWork = async (e) => {\n    e.preventDefault();\n\n    //const query=\"hola\";\n    const url = `https://citmalumnes.upc.es/~alexbm1/TFG/data/cercaWorks.php?query=${query}`;\n    console.log(url);\n    try {\n      const res = await fetch(url);\n      const data = await res.json();\n      console.log(data);\n    } catch (er) {\n      console.log(er);\n    }\n\n  }\n\n  return (\n\n    <div className=\"App\">\n      <AuthProvider>\n        <Router>\n          <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark navbar-fontstyle\">\n\n            <a className=\"navbar-brand  cursor\" href=\"/\">\n              <img src={logo} height=\"50\" className=\"d-inline-block align-top glitch\" alt=\"\" loading=\"lazy\" ></img>\n\n            </a>\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n\n              <Categories></Categories>\n\n\n            </div>\n\n\n\n            <form className=\"form-inline\" onSubmit={searchWork}>\n\n              <input className=\"form-control mr-sm-2 navbar-form borderRadius\" type=\"search\" aria-label=\"Search\" id=\"workSearch\" name=\"query\" value={query} onChange={(e) => setQuery(e.target.value)} placeholder=\"Search\"></input>\n\n              <a className=\"btn btn-outline-info my-2 my-sm-0 navbar-form searchButton\" type=\"button\" value=\"Search\" href={'/workSearch/' + query}>Search</a>\n\n\n            </form>\n            <Link to='/'>\n              <button className=\"btn btn-danger mx-2 searchButton\" onClick={() => firebaseAuth.auth().signOut()} >Sign Out</button>\n            </Link>\n\n          </nav>\n\n\n          <PrivateRoute exact path=\"/\" component={WorksList} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/signup\" component={SignUp} />\n          <Route exact path=\"/workSearch/:query\" component={MovieSearch} />\n          <Route exact path=\"/category/:categoryID\" component={CategoryWorks} />\n          <Route exact path=\"/user/:userEmail\" component={UserWorks} />\n          <Route exact path=\"/work/:workID\" component={WorkDetails} />\n          <Route exact path=\"/addWork\" component={AddWork} />\n\n\n\n\n        </Router>\n      </AuthProvider>\n\n      <footer className=\"footer mt-auto  bg-dark displayBlock\">\n        <div className=\"container text-center p-1\">\n          <a href=\"https://twitter.com/alex_burdoy\" className=\"fab fa-twitter px-1\"></a>\n          <a href=\"https://www.instagram.com/germadelalaia\" className=\"fab fa-instagram px-1\"></a>\n          <a href=\"https://github.com/alexburdoy/\" className=\"fab fa-github px-1\"></a>\n          <a href=\"https://www.youtube.com/channel/UC2luRv7xsGxDobJ3HXYU4Sg\" className=\"fab fa-youtube px-1\"></a>\n        </div>\n\n        <div className=\"container text-center py-1 textWhite\">\n          © Àlex Burdoy\n        </div>\n      </footer>\n    </div>\n\n  );\n}\n\nclass Categories extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      categories: [],\n\n\n    }\n\n  }\n\n  componentDidMount() {\n    const url = \"https://citmalumnes.upc.es/~alexbm1/TFG/data/categories_JSON.php\";\n    console.log(url);\n\n    fetch(url)\n      .then(response => response.json())\n      .then(json => {\n        this.setState({\n          categories: json.categories\n        });\n      });\n\n  }\n\n\n  render() {\n\n    return (\n      <ul className=\"navbar-nav\">{this.state.categories.map((category, idx) =>\n        <Category key={idx} categoryName={category}></Category>\n      )}\n      </ul>\n    );\n  }\n}\n\nclass Category extends React.Component {\n  constructor(props) {\n    super();\n  }\n\n\n  render() {\n    let info = this.props.categoryName;\n    //console.log('https://image.tmdb.org/t/p/w500' + info.backdrop_path);\n\n\n    return (\n      <li className=\"nav-item \">\n\n        <a className=\"nav-link glitch\" href={'/category/' + info.id}>{info.name}</a>\n\n      </li>\n    );\n  }\n}\n\n\nclass WorksList extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      works: [],\n\n\n    }\n\n  }\n\n  componentDidMount() {\n    const url = \"https://citmalumnes.upc.es/~alexbm1/TFG/data/works_JSON.php\";\n    console.log(url);\n\n    fetch(url)\n      .then(response => response.json())\n      .then(json => {\n        this.setState({\n          works: json.works\n        });\n      });\n\n  }\n\n\n  render() {\n\n    return (\n      <div>\n        <div id='hero' className=\"hero-section\">\n          <div className=\"wrapper-move-heading\">\n            <h1 className=\"hero-heading second font-face-bnReg\">PORTAFOLIS </h1>\n            <h1 className=\"hero-heading second font-face-bnReg\">  PORTAFOLIS</h1>\n          </div>\n          <div className=\"hero-slider w-slider\">\n            <div className=\"hero-slider-mask w-slider-mask\">\n              <div className=\"hero-slide w-slide\">\n                <div className=\"container-heading-slider\">\n                  <div className=\"whapper-heading-slide\">\n                    <div className=\"overflow\">\n                      <div className=\"sub-heading font-face-bnThin\">\n                        PLATAFORMA MULTIMÈDIA\n                      </div>\n                      <div className=\"bakground\"></div>\n\n                    </div>\n                    <div className=\"overflow\">\n                      <div className=\"heading font-face-bnReg\">\n                        TREBALLS RECOMANATS\n                      </div>\n                      <div className=\"bakground\"></div>\n\n                    </div>\n                  </div>\n                  <div className=\"slideRecomanats\">\n                    <div className=\"background-first-slide\"></div>\n                    <div className=\"background-second-slide\"></div>\n                    <div className=\"background-third-slide\"></div>\n                    <div className=\"background-first-slide\"></div>\n                  </div>\n\n                </div>\n              </div>\n\n            </div>\n          </div>\n        </div>\n        <div className=\"cosPagina p-5 mt-2 mb-5\">\n          <div className=\"row row-cols-1 row-cols-md-4 \">{this.state.works.map((work, idx) =>\n            <Work key={idx} workInfo={work}></Work>\n          )}\n          </div>\n        </div>\n        <div className=\"m-5 pb-5 px-4 textCenter \">\n          <Link to=\"/addWork\">\n            <a className=\"btn btn-primary addButton borderRadius\" >Add</a>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\nclass Work extends React.Component {\n  constructor(props) {\n    super();\n  }\n\n\n  render() {\n    let info = this.props.workInfo;\n    //console.log('https://image.tmdb.org/t/p/w500' + info.backdrop_path);\n\n\n    return (\n\n      <div className=\"col mb-4\">\n\n\n        <div className=\"card bgCard\" id={info.id}>\n          <div className=\"card-body\">\n            <CategoryCard idCat={info.categoria}></CategoryCard>\n            <Link to={'/work/' + info.id}>\n              <h5 className=\"card-title title\">{info.name}</h5>\n              <p className=\"card-text\">{info.description}</p>\n            </Link>\n            <a href={'/user/' + info.user}>\n              <p className=\"card-text\"><small className=\"text-muted email\">{info.user}</small></p>\n            </a>\n            <p className=\"card-text\"><small className=\"text-muted\">{info.data}</small></p>\n\n          </div>\n        </div>\n\n\n\n\n      </div>\n\n    );\n  }\n}\nclass CategoryCard extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      categories: [],\n\n\n    }\n\n  }\n\n  componentDidMount() {\n    const url = \"https://citmalumnes.upc.es/~alexbm1/TFG/data/namecat.php?name=\" + this.props.idCat;\n    console.log(url);\n    console.log(this.props.idCat);\n\n    fetch(url)\n      .then(response => response.json())\n      .then(json => {\n        this.setState({\n          categories: json.categories\n        });\n      });\n\n  }\n\n\n  render() {\n\n    return (\n      <div >{this.state.categories.map((category, idx) =>\n        <CategoryName key={idx} categoryName={category} />\n      )}\n      </div>\n    );\n  }\n}\nclass CategoryName extends React.Component {\n  constructor(props) {\n    super();\n  }\n\n\n  render() {\n    let info = this.props.categoryName;\n\n\n\n    return (\n\n      <a href={'/category/' + info.id}>\n        <h5 className=\"cursor categoryCard\">{info.name}</h5>\n      </a>\n\n    );\n  }\n}\n\nclass CategoryWorks extends React.Component {\n  constructor({ match, location }) {\n    super();\n    this.state = {\n      idCategory: match.params.categoryID,\n      works: [],\n      categories: [],\n\n    }\n    console.log(JSON.stringify(match));\n\n  }\n\n\n  componentDidMount() {\n    let url2 = \"https://citmalumnes.upc.es/~alexbm1/TFG/data/namecat.php?name=\" + this.state.idCategory + \".php\";\n    let url = \"https://citmalumnes.upc.es/~alexbm1/TFG/data/category.php?id=\" + this.state.idCategory;\n    console.log(url);\n    console.log(url2);\n    console.log(this.state.idCategory);\n    fetch(url)\n      .then(response => response.json())\n      .then(json => {\n        this.setState({\n          works: json.works,\n        });\n      });\n\n    fetch(url2)\n      .then(response => response.json())\n      .then(json => {\n        this.setState({\n          categories: json.categories,\n        });\n      });\n\n  }\n\n  render() {\n    return (\n      <div className=\"cosPagina py-3 mx-5 mt-4\">\n        <div>{this.state.categories.map((category, idx) =>\n          <CatName key={idx} catInfo={category}></CatName>\n        )}\n        </div>\n        <div className=\"row row-cols-1 row-cols-md-4 \">{this.state.works.map((work, idx) =>\n          <Work key={idx} workInfo={work}></Work>\n        )}\n        </div>\n        <div className=\" pb-5 px-4 textCenter mt-5\"><a className=\"btn btn-primary addButton borderRadius\" href=\"/addWork\">Add</a></div>\n      </div>\n    );\n  }\n}\n\nclass UserWorks extends React.Component {\n  constructor({ match, location }) {\n    super();\n    this.state = {\n      userEmail: match.params.userEmail,\n      works: [],\n      categories: [],\n\n    }\n    console.log(JSON.stringify(match));\n\n  }\n\n\n  componentDidMount() {\n    let url = \"https://citmalumnes.upc.es/~alexbm1/TFG/data/user.php?email=\" + this.state.userEmail;\n    console.log(url);\n    console.log(this.state.userEmail);\n    fetch(url)\n      .then(response => response.json())\n      .then(json => {\n        this.setState({\n          works: json.works,\n        });\n      });\n\n\n\n  }\n\n  render() {\n    return (\n      <div className=\"cosPagina py-3 mx-5 mt-4\">\n        <h1 className=\"pl-3 detailsTitle mb-4\">{this.state.userEmail}</h1>\n        <div className=\"row row-cols-1 row-cols-md-4 \">{this.state.works.map((work, idx) =>\n          <Work key={idx} workInfo={work}></Work>\n        )}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass CatName extends React.Component {\n  constructor(props) {\n    super();\n  }\n\n\n  render() {\n    let info = this.props.catInfo;\n\n\n\n    return (\n\n      <h1 className=\"pl-3 detailsTitle mb-4\">{info.name}</h1>\n\n    );\n  }\n}\n\nclass WorkDetails extends React.Component {\n  constructor({ match, location }) {\n    super();\n    this.state = {\n      idWork: match.params.workID,\n      works: [],\n\n    }\n    console.log(JSON.stringify(match));\n\n  }\n\n\n  componentDidMount() {\n    let url = \"https://citmalumnes.upc.es/~alexbm1/TFG/data/work.php?id=\" + this.state.idWork;\n    console.log(url);\n    console.log(this.state.idWork);\n    fetch(url)\n      .then(response => response.json())\n      .then(json => {\n        this.setState({\n          works: json.works\n        });\n      });\n\n  }\n\n  render() {\n    return (\n      <div className=\"cosPagina p-5 mt-2 mb-5\">\n        <div>{this.state.works.map((work, idx) =>\n          <Detail key={idx} workInfo={work}></Detail>\n        )}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Detail extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n\n  render() {\n    let info = this.props.workInfo;\n\n\n\n    return (\n      <div>\n        <h1 className=\"pl-3 detailsTitle mb-4\">{info.name}</h1>\n        <div className=\"row row-cols-1 row-cols-md-2\">\n          <div className=\"col mb-4\">\n            <p className=\"card-text\">{info.description}</p>\n            <a href={'/user/' + info.user}>\n              <p className=\"card-text\"><small className=\"text-muted email\">{info.user}</small></p>\n            </a>\n            <p className=\"card-text\"><small className=\"text-muted\">{info.data}</small></p>\n\n            <CategoryCard idCat={info.categoria}></CategoryCard>\n          </div>\n          <div className=\"col mb-4\">\n            <img src={'https://citmalumnes.upc.es/~alexbm1/TFG/img/' + info.imgURL} className=\"detailsImg\" alt={info.name}></img>\n          </div>\n        </div>\n        <div className=\"commentContainer m-1 p-4\">\n          <CommentDiv idWorkComment={info.id}></CommentDiv>\n        </div>\n        <AddComment workID={info.id} />\n\n\n      </div>\n\n\n\n\n\n\n\n\n    );\n  }\n}\n\nfunction AddComment({ workID }) {\n\n\n  let [query, setQuery] = useState('');\n\n  var user = firebase.auth().currentUser;\n  var emailUser;\n  if (user != null) {\n    emailUser = user.email;\n    console.log(emailUser);\n  }\n\n\n\n\n\n  let searchWork = async (e, d, i) => {\n    //.preventDefault();\n    // d.preventDefault();\n    // i.preventDefault();\n\n    //const query=\"hola\";\n    const url = `https://citmalumnes.upc.es/~alexbm1/TFG/data/addComment.php?idWork=${workID}&comment=${query}&user=${emailUser}`;\n    console.log(url);\n    try {\n      const res = await fetch(url);\n      const data = await res.json();\n      console.log(data);\n    } catch (er) {\n      console.log(er);\n    }\n\n  }\n  //let work = this.props.workID;\n\n\n\n\n  return (\n    <div>\n\n      <div className=\"cosPagina\">\n        <div className=\"mx-5 mt-5\">\n          <h1 className=\"pl-3 detailsTitle mb-4\">Afegir Comentari</h1>\n          <form onSubmit={searchWork} method=\"get\">\n            <div className=\"form-row mx-5\">\n              <div className=\"col-md-12 mb-12 my-2\">\n                <div className=\"input-group\">\n                  <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text borderRadius\" id=\"inputGroupPrepend2\">Comentari</span>\n                  </div>\n                  <input type=\"text\" className=\"form-control borderRadius\" id=\"workName\" name=\"query\" value={query} onChange={(e) => setQuery(e.target.value)} required></input>\n                </div>\n              </div>\n            </div>\n            <a className=\"btn btn-outline-info my-2 my-sm-0 navbar-form searchButton mx-5 p-2\" type=\"button\" value=\"Afegeix\" onClick={searchWork} href={workID}>Afegeix</a>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n\n\n\n\n}\n\nclass CommentDiv extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      comments: [],\n\n\n    }\n\n  }\n\n  componentDidMount() {\n    const url = \"https://citmalumnes.upc.es/~alexbm1/TFG/data/comment.php?idWorkComment=\" + this.props.idWorkComment;\n    console.log(url);\n    console.log(this.props.idWorkComment);\n\n    fetch(url)\n      .then(response => response.json())\n      .then(json => {\n        this.setState({\n          comments: json.comments\n        });\n      });\n\n  }\n\n\n  render() {\n\n    return (\n      <div >{this.state.comments.map((comment, idx) =>\n        <Comment key={idx} commentContent={comment} />\n      )}\n      </div>\n    );\n  }\n}\n\nclass Comment extends React.Component {\n  constructor(props) {\n    super();\n  }\n\n\n  render() {\n    let info = this.props.commentContent;\n\n\n\n    return (\n\n      <div className=\"comment py-2 px-5 mx-5 my-2\">\n        <a href={'/user/' + info.user}>\n          <h5 className=\"email\">{info.user}</h5>\n        </a>\n        <p className=\"textComment\">{info.comment}</p>\n        <p ><small className=\"text-muted\">{info.data}</small></p>\n      </div>\n\n\n    );\n  }\n}\nclass MovieSearch extends React.Component {\n\n  constructor(props) {\n    super();\n    this.state = {\n      results: [],\n\n    }\n\n  }\n\n  componentDidMount() {\n    let url = \"https://citmalumnes.upc.es/~alexbm1/TFG/data/cercaWorks.php?query=\" + this.props.match.params.query\n    console.log(url);\n    fetch(url)\n      .then(response => response.json())\n      .then(json => {\n        this.setState({\n          results: json.results,\n\n\n\n        });\n      });\n\n  }\n\n  render() {\n\n\n    return (\n      <div>\n\n        <div className=\"cosPagina\">\n          <div className=\"mx-2 mt-5\">\n            <div className=\"row featurette mt-2 px-3\">\n              <div className=\"col-md-1 order-md-1\">\n                <a className=\"btn btn-danger my-4 my-sm-2 navbar-form borderRadius\" href=\"/\" type=\"button\" >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-arrow-left\" viewBox=\"0 0 16 16\">\n                    <path fill-rule=\"evenodd\" d=\"M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z\" />\n                  </svg>\n                 Back</a>\n              </div>\n              <div className=\"col-md-11 order-md-2 vertCenter\">\n                <h1 className=\"results\">Results for: {this.props.match.params.query}</h1>\n              </div>\n            </div>\n          </div>\n          <div className=\"row row-cols-1 row-cols-md-5 p-3\">{this.state.results.map((work, idx) =>\n            <Work key={idx} workInfo={work}></Work>\n          )}\n          </div>\n\n\n        </div>\n\n      </div>\n    );\n  }\n\n\n\n}\n\nfunction AddWork() {\n\n  let [query, setQuery] = useState('');\n  let [description, setDescription] = useState('');\n  let [imgURL, setImgURL] = useState('');\n  let [category, setCategory] = useState('');\n\n  var user = firebase.auth().currentUser;\n  var emailUser;\n  if (user != null) {\n    emailUser = user.email;\n    console.log(emailUser);\n  }\n\n  let searchWork = async (e, d, i) => {\n    //.preventDefault();\n    // d.preventDefault();\n    // i.preventDefault();\n\n    //const query=\"hola\";\n    const url = `https://citmalumnes.upc.es/~alexbm1/TFG/data/addWork.php?name=${query}&description=${description}&imgUrl=${imgURL}&categoria=${category}&user=${emailUser}`;\n    console.log(url);\n    try {\n      const res = await fetch(url);\n      const data = await res.json();\n      console.log(data);\n    } catch (er) {\n      console.log(er);\n    }\n\n  }\n\n\n\n\n  return (\n    <div>\n\n      <div className=\"cosPagina\">\n        <div className=\"mx-5 mt-5\">\n          <h1 className=\"pl-3 detailsTitle mb-4\">Afegir Treball al perfil de l'usuari {emailUser}</h1>\n\n          <form onSubmit={searchWork} method=\"get\">\n            <div className=\"form-row mx-5\">\n              <div className=\"col-md-4 mb-12 my-2 p-2\">\n                <div className=\"input-group\">\n                  <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\" id=\"inputGroupPrepend2\">Nom</span>\n                  </div>\n                  <input type=\"text\" className=\"form-control borderRadius\" id=\"workName\" placeholder=\"Treball Multimedia\" name=\"query\" value={query} onChange={(e) => setQuery(e.target.value)} required></input>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"form-row mx-5\">\n              <div className=\"col-md-4 mb-12 my-2 p-2\">\n                <div className=\"input-group\">\n                  <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\" id=\"inputGroupPrepend2\">Descripció</span>\n                  </div>\n                  <input type=\"text\" className=\"form-control borderRadius\" id=\"workDescription\" placeholder=\"Descripció\" name=\"description\" value={description} onChange={(d) => setDescription(d.target.value)} required></input>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"form-row mx-5\">\n              <div className=\"col-md-4 mb-12 my-2 p-2\">\n                <div className=\"input-group\">\n                  <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\" id=\"inputGroupPrepend2\">URL Imatge</span>\n                  </div>\n                  <input type=\"text\" className=\"form-control borderRadius\" id=\"workImgURL\" placeholder=\"foto.jpg\" name=\"imgURL\" value={imgURL} onChange={(i) => setImgURL(i.target.value)} required></input>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"form-row mx-5\">\n              <div className=\"col-md-4 mb-12 my-2 p-2\">\n                <div className=\"input-group\">\n                  <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\" id=\"inputGroupPrepend2\">Categoria</span>\n                  </div>\n                  <input type=\"number\" className=\"form-control borderRadius\" id=\"workImgURL\" placeholder=\"Número Categoria\" name=\"category\" value={category} onChange={(c) => setCategory(c.target.value)} required></input>\n                </div>\n              </div>\n            </div>\n\n            <Link to=\"/\">\n              <a className=\"btn btn-outline-info my-2 my-sm-0 navbar-form searchButton mx-5 p-2\" type=\"button\" value=\"Afegeix\" onClick={searchWork}>Afegeix</a>\n            </Link>\n            <div>\n              <h2 className=\"pl-3 detailsTitle my-4\">Categories</h2>\n              <p className=\"pl-3 my-4\">Programació = 1 | Disseny = 2 | VFX = 3 | 3D = 4</p>\n            </div>\n            <div>\n              <h2 className=\"pl-3 detailsTitle my-4\">Imatges Disponibles</h2>\n              <p className=\"pl-3 my-4\">programacio.png | disseny.jpg | vfx.jpg | 3d.jpg</p>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n\n\n\n\n}\n\nexport default App;\n\n","C:\\Users\\Usuario\\React\\TFG\\tfg_alex\\src\\firebase-config.js",[],"C:\\Users\\Usuario\\React\\TFG\\tfg_alex\\src\\Auth.js",[],"C:\\Users\\Usuario\\React\\TFG\\tfg_alex\\src\\PrivateRoute.js",[],"C:\\Users\\Usuario\\React\\TFG\\tfg_alex\\src\\Login.js",["46"],"import React, { useCallback, useContext } from \"react\";\r\nimport { withRouter, Redirect } from \"react-router\";\r\nimport firebaseAuth from \"./firebase-config\";\r\nimport { AuthContext } from \"./Auth.js\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Login = ({ history }) => {\r\n    const handleLogin = useCallback(\r\n        async event => {\r\n            event.preventDefault();\r\n            const { email, password } = event.target.elements;\r\n\r\n            try {\r\n                await firebaseAuth\r\n                    .auth()\r\n                    .signInWithEmailAndPassword(email.value, password.value);\r\n                history.push(\"/\");\r\n            } catch (error) {\r\n                alert(error);\r\n            }\r\n        },\r\n        [history]\r\n    );\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n\r\n    if (currentUser) {\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n        <div className=\"m-5 p-5\">\r\n            <h1 className=\"py-3 detailsTitle \">Log in</h1>\r\n            <form onSubmit={handleLogin}>\r\n                <div className=\"form-row \">\r\n                    <div className=\"col-md-4 mb-12 my-2\">\r\n                        <div className=\"input-group\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text borderRadius\" id=\"inputGroupPrepend2\">Email</span>\r\n                            </div>\r\n                            <input type=\"email\" className=\"form-control borderRadius\" id=\"email\" name=\"email\" required></input>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row px-1\">\r\n                        <div className=\"col-md-12 my-2 \">\r\n                            <div className=\"input-group\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <span className=\"input-group-text borderRadius\" id=\"inputGroupPrepend2\">Password</span>\r\n                                </div>\r\n                                <input type=\"password\" className=\"form-control borderRadius\" id=\"password\" name=\"password\" required></input>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button className=\"btn btn-info\" type=\"submit\">Log in</button>\r\n            </form>\r\n            <Link to=\"/signup\">\r\n                <a>\r\n                    <p className=\"email\">Crea un compte</p>\r\n                </a>\r\n            </Link>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(Login);","C:\\Users\\Usuario\\React\\TFG\\tfg_alex\\src\\SignUp.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":97,"column":11,"nodeType":"53","endLine":97,"endColumn":85},{"ruleId":"51","severity":1,"message":"52","line":98,"column":11,"nodeType":"53","endLine":98,"endColumn":95},{"ruleId":"51","severity":1,"message":"52","line":99,"column":11,"nodeType":"53","endLine":99,"endColumn":83},{"ruleId":"51","severity":1,"message":"52","line":100,"column":11,"nodeType":"53","endLine":100,"endColumn":110},{"ruleId":"54","severity":1,"message":"55","line":247,"column":13,"nodeType":"53","endLine":247,"endColumn":68},{"ruleId":"56","severity":1,"message":"57","line":508,"column":3,"nodeType":"58","messageId":"59","endLine":510,"endColumn":4},{"ruleId":"54","severity":1,"message":"55","line":836,"column":15,"nodeType":"53","endLine":836,"endColumn":149},{"ruleId":"54","severity":1,"message":"55","line":58,"column":17,"nodeType":"53","endLine":58,"endColumn":20},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]