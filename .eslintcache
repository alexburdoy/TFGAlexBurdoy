[{"C:\\Users\\Usuario\\React\\TFG\\tfg_alex\\src\\index.js":"1","C:\\Users\\Usuario\\React\\TFG\\tfg_alex\\src\\reportWebVitals.js":"2","C:\\Users\\Usuario\\React\\TFG\\tfg_alex\\src\\App.js":"3","C:\\Users\\Usuario\\React\\TFG\\tfg_alex\\src\\firebase-config.js":"4","C:\\Users\\Usuario\\React\\TFG\\tfg_alex\\src\\Auth.js":"5","C:\\Users\\Usuario\\React\\TFG\\tfg_alex\\src\\PrivateRoute.js":"6","C:\\Users\\Usuario\\React\\TFG\\tfg_alex\\src\\Login.js":"7","C:\\Users\\Usuario\\React\\TFG\\tfg_alex\\src\\SignUp.js":"8"},{"size":512,"mtime":1622729190444,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":22301,"mtime":1622730744571,"results":"12","hashOfConfig":"10"},{"size":431,"mtime":1622719132028,"results":"13","hashOfConfig":"10"},{"size":497,"mtime":1622720304088,"results":"14","hashOfConfig":"10"},{"size":585,"mtime":1622720855316,"results":"15","hashOfConfig":"10"},{"size":2602,"mtime":1622726169261,"results":"16","hashOfConfig":"10"},{"size":1213,"mtime":1622726692824,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1fwxj2b",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\Usuario\\React\\TFG\\tfg_alex\\src\\index.js",[],["36","37"],"C:\\Users\\Usuario\\React\\TFG\\tfg_alex\\src\\reportWebVitals.js",[],"C:\\Users\\Usuario\\React\\TFG\\tfg_alex\\src\\App.js",["38","39","40","41","42"],"C:\\Users\\Usuario\\React\\TFG\\tfg_alex\\src\\firebase-config.js",[],"C:\\Users\\Usuario\\React\\TFG\\tfg_alex\\src\\Auth.js",[],"C:\\Users\\Usuario\\React\\TFG\\tfg_alex\\src\\PrivateRoute.js",[],"C:\\Users\\Usuario\\React\\TFG\\tfg_alex\\src\\Login.js",["43"],"import React, { useCallback, useContext } from \"react\";\r\nimport { withRouter, Redirect } from \"react-router\";\r\nimport firebaseAuth from \"./firebase-config\";\r\nimport { AuthContext } from \"./Auth.js\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Login = ({ history }) => {\r\n    const handleLogin = useCallback(\r\n        async event => {\r\n            event.preventDefault();\r\n            const { email, password } = event.target.elements;\r\n\r\n            try {\r\n                await firebaseAuth\r\n                    .auth()\r\n                    .signInWithEmailAndPassword(email.value, password.value);\r\n                history.push(\"/\");\r\n            } catch (error) {\r\n                alert(error);\r\n            }\r\n        },\r\n        [history]\r\n    );\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n\r\n    if (currentUser) {\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n        <div className=\"m-5 p-5\">\r\n            <h1 className=\"py-3 detailsTitle \">Log in</h1>\r\n            <form onSubmit={handleLogin}>\r\n                <div className=\"form-row \">\r\n                    <div className=\"col-md-4 mb-12 my-2\">\r\n                        <div className=\"input-group\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text borderRadius\" id=\"inputGroupPrepend2\">Email</span>\r\n                            </div>\r\n                            <input type=\"email\" className=\"form-control borderRadius\" id=\"email\" name=\"email\" required></input>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row px-1\">\r\n                        <div className=\"col-md-12 my-2 \">\r\n                            <div className=\"input-group\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <span className=\"input-group-text borderRadius\" id=\"inputGroupPrepend2\">Password</span>\r\n                                </div>\r\n                                <input type=\"password\" className=\"form-control borderRadius\" id=\"password\" name=\"password\" required></input>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button className=\"btn btn-info\" type=\"submit\">Log in</button>\r\n            </form>\r\n            <Link to=\"/signup\">\r\n                <a>\r\n                    <p className=\"email\">Crea un compte</p>\r\n                </a>\r\n            </Link>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(Login);","C:\\Users\\Usuario\\React\\TFG\\tfg_alex\\src\\SignUp.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":103,"column":11,"nodeType":"50","endLine":103,"endColumn":85},{"ruleId":"48","severity":1,"message":"49","line":104,"column":11,"nodeType":"50","endLine":104,"endColumn":95},{"ruleId":"48","severity":1,"message":"49","line":105,"column":11,"nodeType":"50","endLine":105,"endColumn":83},{"ruleId":"48","severity":1,"message":"49","line":106,"column":11,"nodeType":"50","endLine":106,"endColumn":110},{"ruleId":"51","severity":1,"message":"52","line":510,"column":3,"nodeType":"53","messageId":"54","endLine":512,"endColumn":4},{"ruleId":"55","severity":1,"message":"56","line":58,"column":17,"nodeType":"50","endLine":58,"endColumn":20},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]